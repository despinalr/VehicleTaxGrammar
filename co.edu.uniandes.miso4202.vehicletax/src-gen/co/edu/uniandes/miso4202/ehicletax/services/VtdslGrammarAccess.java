/*
* generated by Xtext
*/
package co.edu.uniandes.miso4202.ehicletax.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class VtdslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModeloElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Modelo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModeloAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjetosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjetosObjetoParserRuleCall_3_0 = (RuleCall)cObjetosAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Modelo:
		//	{Modelo} ID "{" objetos+=Objeto* "}";
		public ParserRule getRule() { return rule; }

		//{Modelo} ID "{" objetos+=Objeto* "}"
		public Group getGroup() { return cGroup; }

		//{Modelo}
		public Action getModeloAction_0() { return cModeloAction_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//objetos+=Objeto*
		public Assignment getObjetosAssignment_3() { return cObjetosAssignment_3; }

		//Objeto
		public RuleCall getObjetosObjetoParserRuleCall_3_0() { return cObjetosObjetoParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ObjetoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Objeto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cDescripcionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescripcionSTRINGTerminalRuleCall_1_0 = (RuleCall)cDescripcionAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAtributosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAtributosAtributoParserRuleCall_3_0 = (RuleCall)cAtributosAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Objeto:
		//	name=ID descripcion=STRING? "{" atributos+=Atributo* "}";
		public ParserRule getRule() { return rule; }

		//name=ID descripcion=STRING? "{" atributos+=Atributo* "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//descripcion=STRING?
		public Assignment getDescripcionAssignment_1() { return cDescripcionAssignment_1; }

		//STRING
		public RuleCall getDescripcionSTRINGTerminalRuleCall_1_0() { return cDescripcionSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//atributos+=Atributo*
		public Assignment getAtributosAssignment_3() { return cAtributosAssignment_3; }

		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_3_0() { return cAtributosAtributoParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AtributoNormalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AtributoNormal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAtributoNormalAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNombreAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNombreAlternatives_1_0 = (Alternatives)cNombreAssignment_1.eContents().get(0);
		private final RuleCall cNombreIDTerminalRuleCall_1_0_0 = (RuleCall)cNombreAlternatives_1_0.eContents().get(0);
		private final RuleCall cNombreSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cNombreAlternatives_1_0.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cValorAlternatives_3_0 = (Alternatives)cValorAssignment_3.eContents().get(0);
		private final RuleCall cValorValorAtributoParserRuleCall_3_0_0 = (RuleCall)cValorAlternatives_3_0.eContents().get(0);
		private final RuleCall cValorValorAtributoValorParserRuleCall_3_0_1 = (RuleCall)cValorAlternatives_3_0.eContents().get(1);
		private final RuleCall cValorListaParserRuleCall_3_0_2 = (RuleCall)cValorAlternatives_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AtributoNormal:
		//	{AtributoNormal} nombre=(ID | STRING) ":" valor=(ValorAtributo | ValorAtributoValor | Lista) ";";
		public ParserRule getRule() { return rule; }

		//{AtributoNormal} nombre=(ID | STRING) ":" valor=(ValorAtributo | ValorAtributoValor | Lista) ";"
		public Group getGroup() { return cGroup; }

		//{AtributoNormal}
		public Action getAtributoNormalAction_0() { return cAtributoNormalAction_0; }

		//nombre=(ID | STRING)
		public Assignment getNombreAssignment_1() { return cNombreAssignment_1; }

		//ID | STRING
		public Alternatives getNombreAlternatives_1_0() { return cNombreAlternatives_1_0; }

		//ID
		public RuleCall getNombreIDTerminalRuleCall_1_0_0() { return cNombreIDTerminalRuleCall_1_0_0; }

		//STRING
		public RuleCall getNombreSTRINGTerminalRuleCall_1_0_1() { return cNombreSTRINGTerminalRuleCall_1_0_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//valor=(ValorAtributo | ValorAtributoValor | Lista)
		public Assignment getValorAssignment_3() { return cValorAssignment_3; }

		//ValorAtributo | ValorAtributoValor | Lista
		public Alternatives getValorAlternatives_3_0() { return cValorAlternatives_3_0; }

		//ValorAtributo
		public RuleCall getValorValorAtributoParserRuleCall_3_0_0() { return cValorValorAtributoParserRuleCall_3_0_0; }

		//ValorAtributoValor
		public RuleCall getValorValorAtributoValorParserRuleCall_3_0_1() { return cValorValorAtributoValorParserRuleCall_3_0_1; }

		//Lista
		public RuleCall getValorListaParserRuleCall_3_0_2() { return cValorListaParserRuleCall_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class AtributoObjetoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AtributoObjeto");
		private final RuleCall cObjetoParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AtributoObjeto:
		//	Objeto;
		public ParserRule getRule() { return rule; }

		//Objeto
		public RuleCall getObjetoParserRuleCall() { return cObjetoParserRuleCall; }
	}

	public class AtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Atributo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAtributoNormalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAtributoObjetoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Atributo:
		//	AtributoNormal | AtributoObjeto;
		public ParserRule getRule() { return rule; }

		//AtributoNormal | AtributoObjeto
		public Alternatives getAlternatives() { return cAlternatives; }

		//AtributoNormal
		public RuleCall getAtributoNormalParserRuleCall_0() { return cAtributoNormalParserRuleCall_0; }

		//AtributoObjeto
		public RuleCall getAtributoObjetoParserRuleCall_1() { return cAtributoObjetoParserRuleCall_1; }
	}

	public class ValorAtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValorAtributo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValorAtributoAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_1_2 = (RuleCall)cAlternatives_1.eContents().get(2);
		private final RuleCall cDECIMALTerminalRuleCall_1_3 = (RuleCall)cAlternatives_1.eContents().get(3);
		
		//ValorAtributo:
		//	{ValorAtributo} (ID | STRING | INT | DECIMAL)+;
		public ParserRule getRule() { return rule; }

		//{ValorAtributo} (ID | STRING | INT | DECIMAL)+
		public Group getGroup() { return cGroup; }

		//{ValorAtributo}
		public Action getValorAtributoAction_0() { return cValorAtributoAction_0; }

		//(ID | STRING | INT | DECIMAL)+
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_0() { return cIDTerminalRuleCall_1_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_1() { return cSTRINGTerminalRuleCall_1_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_2() { return cINTTerminalRuleCall_1_2; }

		//DECIMAL
		public RuleCall getDECIMALTerminalRuleCall_1_3() { return cDECIMALTerminalRuleCall_1_3; }
	}

	public class ContenidoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Contenido");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAtributoParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cObjetoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Contenido:
		//	Atributo | Objeto;
		public ParserRule getRule() { return rule; }

		//Atributo | Objeto
		public Alternatives getAlternatives() { return cAlternatives; }

		//Atributo
		public RuleCall getAtributoParserRuleCall_0() { return cAtributoParserRuleCall_0; }

		//Objeto
		public RuleCall getObjetoParserRuleCall_1() { return cObjetoParserRuleCall_1; }
	}

	public class ValorAtributoValorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValorAtributoValor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValorAtributoValorAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cDECIMALTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ValorAtributoValor:
		//	{ValorAtributoValor} ID "=" DECIMAL;
		public ParserRule getRule() { return rule; }

		//{ValorAtributoValor} ID "=" DECIMAL
		public Group getGroup() { return cGroup; }

		//{ValorAtributoValor}
		public Action getValorAtributoValorAction_0() { return cValorAtributoValorAction_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//DECIMAL
		public RuleCall getDECIMALTerminalRuleCall_3() { return cDECIMALTerminalRuleCall_3; }
	}

	public class ListaIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListaInteger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListaIntegerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListOfIntegerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValoresAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValoresINTTerminalRuleCall_4_0 = (RuleCall)cValoresAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ListaInteger:
		//	{ListaInteger} "List of Integer" "=" "{" valores+=INT ("," INT)* "}";
		public ParserRule getRule() { return rule; }

		//{ListaInteger} "List of Integer" "=" "{" valores+=INT ("," INT)* "}"
		public Group getGroup() { return cGroup; }

		//{ListaInteger}
		public Action getListaIntegerAction_0() { return cListaIntegerAction_0; }

		//"List of Integer"
		public Keyword getListOfIntegerKeyword_1() { return cListOfIntegerKeyword_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//valores+=INT
		public Assignment getValoresAssignment_4() { return cValoresAssignment_4; }

		//INT
		public RuleCall getValoresINTTerminalRuleCall_4_0() { return cValoresINTTerminalRuleCall_4_0; }

		//("," INT)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_5_1() { return cINTTerminalRuleCall_5_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ListaStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListaString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListaStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListOfStringKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValoresAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValoresSTRINGTerminalRuleCall_4_0 = (RuleCall)cValoresAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ListaString:
		//	{ListaString} "List of String" "=" "{" valores+=STRING ("," STRING)* "}";
		public ParserRule getRule() { return rule; }

		//{ListaString} "List of String" "=" "{" valores+=STRING ("," STRING)* "}"
		public Group getGroup() { return cGroup; }

		//{ListaString}
		public Action getListaStringAction_0() { return cListaStringAction_0; }

		//"List of String"
		public Keyword getListOfStringKeyword_1() { return cListOfStringKeyword_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//valores+=STRING
		public Assignment getValoresAssignment_4() { return cValoresAssignment_4; }

		//STRING
		public RuleCall getValoresSTRINGTerminalRuleCall_4_0() { return cValoresSTRINGTerminalRuleCall_4_0; }

		//("," STRING)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_5_1() { return cSTRINGTerminalRuleCall_5_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ListaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Lista");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cListaIntegerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cListaStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Lista:
		//	ListaInteger | ListaString;
		public ParserRule getRule() { return rule; }

		//ListaInteger | ListaString
		public Alternatives getAlternatives() { return cAlternatives; }

		//ListaInteger
		public RuleCall getListaIntegerParserRuleCall_0() { return cListaIntegerParserRuleCall_0; }

		//ListaString
		public RuleCall getListaStringParserRuleCall_1() { return cListaStringParserRuleCall_1; }
	}
	
	
	private ModeloElements pModelo;
	private ObjetoElements pObjeto;
	private AtributoNormalElements pAtributoNormal;
	private AtributoObjetoElements pAtributoObjeto;
	private AtributoElements pAtributo;
	private ValorAtributoElements pValorAtributo;
	private ContenidoElements pContenido;
	private ValorAtributoValorElements pValorAtributoValor;
	private ListaIntegerElements pListaInteger;
	private ListaStringElements pListaString;
	private ListaElements pLista;
	private TerminalRule tDECIMAL;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public VtdslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.miso4202.ehicletax.Vtdsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Modelo:
	//	{Modelo} ID "{" objetos+=Objeto* "}";
	public ModeloElements getModeloAccess() {
		return (pModelo != null) ? pModelo : (pModelo = new ModeloElements());
	}
	
	public ParserRule getModeloRule() {
		return getModeloAccess().getRule();
	}

	//Objeto:
	//	name=ID descripcion=STRING? "{" atributos+=Atributo* "}";
	public ObjetoElements getObjetoAccess() {
		return (pObjeto != null) ? pObjeto : (pObjeto = new ObjetoElements());
	}
	
	public ParserRule getObjetoRule() {
		return getObjetoAccess().getRule();
	}

	//AtributoNormal:
	//	{AtributoNormal} nombre=(ID | STRING) ":" valor=(ValorAtributo | ValorAtributoValor | Lista) ";";
	public AtributoNormalElements getAtributoNormalAccess() {
		return (pAtributoNormal != null) ? pAtributoNormal : (pAtributoNormal = new AtributoNormalElements());
	}
	
	public ParserRule getAtributoNormalRule() {
		return getAtributoNormalAccess().getRule();
	}

	//AtributoObjeto:
	//	Objeto;
	public AtributoObjetoElements getAtributoObjetoAccess() {
		return (pAtributoObjeto != null) ? pAtributoObjeto : (pAtributoObjeto = new AtributoObjetoElements());
	}
	
	public ParserRule getAtributoObjetoRule() {
		return getAtributoObjetoAccess().getRule();
	}

	//Atributo:
	//	AtributoNormal | AtributoObjeto;
	public AtributoElements getAtributoAccess() {
		return (pAtributo != null) ? pAtributo : (pAtributo = new AtributoElements());
	}
	
	public ParserRule getAtributoRule() {
		return getAtributoAccess().getRule();
	}

	//ValorAtributo:
	//	{ValorAtributo} (ID | STRING | INT | DECIMAL)+;
	public ValorAtributoElements getValorAtributoAccess() {
		return (pValorAtributo != null) ? pValorAtributo : (pValorAtributo = new ValorAtributoElements());
	}
	
	public ParserRule getValorAtributoRule() {
		return getValorAtributoAccess().getRule();
	}

	//Contenido:
	//	Atributo | Objeto;
	public ContenidoElements getContenidoAccess() {
		return (pContenido != null) ? pContenido : (pContenido = new ContenidoElements());
	}
	
	public ParserRule getContenidoRule() {
		return getContenidoAccess().getRule();
	}

	//ValorAtributoValor:
	//	{ValorAtributoValor} ID "=" DECIMAL;
	public ValorAtributoValorElements getValorAtributoValorAccess() {
		return (pValorAtributoValor != null) ? pValorAtributoValor : (pValorAtributoValor = new ValorAtributoValorElements());
	}
	
	public ParserRule getValorAtributoValorRule() {
		return getValorAtributoValorAccess().getRule();
	}

	//ListaInteger:
	//	{ListaInteger} "List of Integer" "=" "{" valores+=INT ("," INT)* "}";
	public ListaIntegerElements getListaIntegerAccess() {
		return (pListaInteger != null) ? pListaInteger : (pListaInteger = new ListaIntegerElements());
	}
	
	public ParserRule getListaIntegerRule() {
		return getListaIntegerAccess().getRule();
	}

	//ListaString:
	//	{ListaString} "List of String" "=" "{" valores+=STRING ("," STRING)* "}";
	public ListaStringElements getListaStringAccess() {
		return (pListaString != null) ? pListaString : (pListaString = new ListaStringElements());
	}
	
	public ParserRule getListaStringRule() {
		return getListaStringAccess().getRule();
	}

	//Lista:
	//	ListaInteger | ListaString;
	public ListaElements getListaAccess() {
		return (pLista != null) ? pLista : (pLista = new ListaElements());
	}
	
	public ParserRule getListaRule() {
		return getListaAccess().getRule();
	}

	//terminal DECIMAL:
	//	INT "." INT;
	public TerminalRule getDECIMALRule() {
		return (tDECIMAL != null) ? tDECIMAL : (tDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DECIMAL"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
