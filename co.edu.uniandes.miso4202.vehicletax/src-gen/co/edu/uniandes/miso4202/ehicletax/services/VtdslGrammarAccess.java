/*
* generated by Xtext
*/
package co.edu.uniandes.miso4202.ehicletax.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class VtdslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cComponentesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cComponentesComponenteParserRuleCall_0 = (RuleCall)cComponentesAssignment.eContents().get(0);
		
		//Model:
		//	componentes+=Componente*;
		public ParserRule getRule() { return rule; }

		//componentes+=Componente*
		public Assignment getComponentesAssignment() { return cComponentesAssignment; }

		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_0() { return cComponentesComponenteParserRuleCall_0; }
	}

	public class ComponenteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Componente");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cObjetoSimpleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cObjetoNombreParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Componente:
		//	ObjetoSimple | ObjetoNombre;
		public ParserRule getRule() { return rule; }

		//ObjetoSimple | ObjetoNombre
		public Alternatives getAlternatives() { return cAlternatives; }

		//ObjetoSimple
		public RuleCall getObjetoSimpleParserRuleCall_0() { return cObjetoSimpleParserRuleCall_0; }

		//ObjetoNombre
		public RuleCall getObjetoNombreParserRuleCall_1() { return cObjetoNombreParserRuleCall_1; }
	}

	public class ObjetoSimpleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjetoSimple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cComponentesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cComponentesComponenteParserRuleCall_2_0 = (RuleCall)cComponentesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ObjetoSimple:
		//	name=ID "{" componentes+=Componente* "}";
		public ParserRule getRule() { return rule; }

		//name=ID "{" componentes+=Componente* "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//componentes+=Componente*
		public Assignment getComponentesAssignment_2() { return cComponentesAssignment_2; }

		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_2_0() { return cComponentesComponenteParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ObjetoNombreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjetoNombre");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cDescripcionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescripcionSTRINGTerminalRuleCall_1_0 = (RuleCall)cDescripcionAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cComponentesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cComponentesComponenteParserRuleCall_3_0 = (RuleCall)cComponentesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ObjetoNombre:
		//	name=ID descripcion=STRING "{" componentes+=Componente* "}";
		public ParserRule getRule() { return rule; }

		//name=ID descripcion=STRING "{" componentes+=Componente* "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//descripcion=STRING
		public Assignment getDescripcionAssignment_1() { return cDescripcionAssignment_1; }

		//STRING
		public RuleCall getDescripcionSTRINGTerminalRuleCall_1_0() { return cDescripcionSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//componentes+=Componente*
		public Assignment getComponentesAssignment_3() { return cComponentesAssignment_3; }

		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_3_0() { return cComponentesComponenteParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Atributo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cAtributoAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Alternatives cAlternatives_1_2 = (Alternatives)cGroup_1.eContents().get(2);
		private final RuleCall cTipoSimpleParserRuleCall_1_2_0 = (RuleCall)cAlternatives_1_2.eContents().get(0);
		private final RuleCall cTipoValorParserRuleCall_1_2_1 = (RuleCall)cAlternatives_1_2.eContents().get(1);
		private final RuleCall cListaParserRuleCall_1_2_2 = (RuleCall)cAlternatives_1_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//Atributo:
		//	{Atributo} ID | STRING ":" (TipoSimple | TipoValor | Lista) ";";
		public ParserRule getRule() { return rule; }

		//{Atributo} ID | STRING ":" (TipoSimple | TipoValor | Lista) ";"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{Atributo} ID
		public Group getGroup_0() { return cGroup_0; }

		//{Atributo}
		public Action getAtributoAction_0_0() { return cAtributoAction_0_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_1() { return cIDTerminalRuleCall_0_1; }

		//STRING ":" (TipoSimple | TipoValor | Lista) ";"
		public Group getGroup_1() { return cGroup_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_0() { return cSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//TipoSimple | TipoValor | Lista
		public Alternatives getAlternatives_1_2() { return cAlternatives_1_2; }

		//TipoSimple
		public RuleCall getTipoSimpleParserRuleCall_1_2_0() { return cTipoSimpleParserRuleCall_1_2_0; }

		//TipoValor
		public RuleCall getTipoValorParserRuleCall_1_2_1() { return cTipoValorParserRuleCall_1_2_1; }

		//Lista
		public RuleCall getListaParserRuleCall_1_2_2() { return cListaParserRuleCall_1_2_2; }

		//";"
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
	}

	public class TipoSimpleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TipoSimple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTipoSimpleAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TipoSimple:
		//	{TipoSimple} (ID | STRING) ";";
		public ParserRule getRule() { return rule; }

		//{TipoSimple} (ID | STRING) ";"
		public Group getGroup() { return cGroup; }

		//{TipoSimple}
		public Action getTipoSimpleAction_0() { return cTipoSimpleAction_0; }

		//ID | STRING
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_0() { return cIDTerminalRuleCall_1_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_1() { return cSTRINGTerminalRuleCall_1_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class TipoValorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TipoValor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTipoValorAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cDECIMALTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TipoValor:
		//	{TipoValor} ID ":" ID "=" DECIMAL ";";
		public ParserRule getRule() { return rule; }

		//{TipoValor} ID ":" ID "=" DECIMAL ";"
		public Group getGroup() { return cGroup; }

		//{TipoValor}
		public Action getTipoValorAction_0() { return cTipoValorAction_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_3() { return cIDTerminalRuleCall_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//DECIMAL
		public RuleCall getDECIMALTerminalRuleCall_5() { return cDECIMALTerminalRuleCall_5; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ListaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Lista");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cListaIntParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cListaStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Lista:
		//	ListaInt | ListaString;
		public ParserRule getRule() { return rule; }

		//ListaInt | ListaString
		public Alternatives getAlternatives() { return cAlternatives; }

		//ListaInt
		public RuleCall getListaIntParserRuleCall_0() { return cListaIntParserRuleCall_0; }

		//ListaString
		public RuleCall getListaStringParserRuleCall_1() { return cListaStringParserRuleCall_1; }
	}

	public class ListaIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListaInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListaIntAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListOfIntegerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValoresAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValoresINTTerminalRuleCall_2_0 = (RuleCall)cValoresAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ListaInt:
		//	{ListaInt} "List of Integer = {" valores+=INT ("," INT)* "}";
		public ParserRule getRule() { return rule; }

		//{ListaInt} "List of Integer = {" valores+=INT ("," INT)* "}"
		public Group getGroup() { return cGroup; }

		//{ListaInt}
		public Action getListaIntAction_0() { return cListaIntAction_0; }

		//"List of Integer = {"
		public Keyword getListOfIntegerKeyword_1() { return cListOfIntegerKeyword_1; }

		//valores+=INT
		public Assignment getValoresAssignment_2() { return cValoresAssignment_2; }

		//INT
		public RuleCall getValoresINTTerminalRuleCall_2_0() { return cValoresINTTerminalRuleCall_2_0; }

		//("," INT)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_3_1() { return cINTTerminalRuleCall_3_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ListaStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListaString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListaStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListOfStringKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValoresAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValoresSTRINGTerminalRuleCall_2_0 = (RuleCall)cValoresAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ListaString:
		//	{ListaString} "List of String = {" valores+=STRING ("," STRING)* "}";
		public ParserRule getRule() { return rule; }

		//{ListaString} "List of String = {" valores+=STRING ("," STRING)* "}"
		public Group getGroup() { return cGroup; }

		//{ListaString}
		public Action getListaStringAction_0() { return cListaStringAction_0; }

		//"List of String = {"
		public Keyword getListOfStringKeyword_1() { return cListOfStringKeyword_1; }

		//valores+=STRING
		public Assignment getValoresAssignment_2() { return cValoresAssignment_2; }

		//STRING
		public RuleCall getValoresSTRINGTerminalRuleCall_2_0() { return cValoresSTRINGTerminalRuleCall_2_0; }

		//("," STRING)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_3_1() { return cSTRINGTerminalRuleCall_3_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private ModelElements pModel;
	private ComponenteElements pComponente;
	private ObjetoSimpleElements pObjetoSimple;
	private ObjetoNombreElements pObjetoNombre;
	private AtributoElements pAtributo;
	private TipoSimpleElements pTipoSimple;
	private TipoValorElements pTipoValor;
	private ListaElements pLista;
	private ListaIntElements pListaInt;
	private ListaStringElements pListaString;
	private TerminalRule tDECIMAL;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public VtdslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.miso4202.ehicletax.Vtdsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	componentes+=Componente*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Componente:
	//	ObjetoSimple | ObjetoNombre;
	public ComponenteElements getComponenteAccess() {
		return (pComponente != null) ? pComponente : (pComponente = new ComponenteElements());
	}
	
	public ParserRule getComponenteRule() {
		return getComponenteAccess().getRule();
	}

	//ObjetoSimple:
	//	name=ID "{" componentes+=Componente* "}";
	public ObjetoSimpleElements getObjetoSimpleAccess() {
		return (pObjetoSimple != null) ? pObjetoSimple : (pObjetoSimple = new ObjetoSimpleElements());
	}
	
	public ParserRule getObjetoSimpleRule() {
		return getObjetoSimpleAccess().getRule();
	}

	//ObjetoNombre:
	//	name=ID descripcion=STRING "{" componentes+=Componente* "}";
	public ObjetoNombreElements getObjetoNombreAccess() {
		return (pObjetoNombre != null) ? pObjetoNombre : (pObjetoNombre = new ObjetoNombreElements());
	}
	
	public ParserRule getObjetoNombreRule() {
		return getObjetoNombreAccess().getRule();
	}

	//Atributo:
	//	{Atributo} ID | STRING ":" (TipoSimple | TipoValor | Lista) ";";
	public AtributoElements getAtributoAccess() {
		return (pAtributo != null) ? pAtributo : (pAtributo = new AtributoElements());
	}
	
	public ParserRule getAtributoRule() {
		return getAtributoAccess().getRule();
	}

	//TipoSimple:
	//	{TipoSimple} (ID | STRING) ";";
	public TipoSimpleElements getTipoSimpleAccess() {
		return (pTipoSimple != null) ? pTipoSimple : (pTipoSimple = new TipoSimpleElements());
	}
	
	public ParserRule getTipoSimpleRule() {
		return getTipoSimpleAccess().getRule();
	}

	//TipoValor:
	//	{TipoValor} ID ":" ID "=" DECIMAL ";";
	public TipoValorElements getTipoValorAccess() {
		return (pTipoValor != null) ? pTipoValor : (pTipoValor = new TipoValorElements());
	}
	
	public ParserRule getTipoValorRule() {
		return getTipoValorAccess().getRule();
	}

	//Lista:
	//	ListaInt | ListaString;
	public ListaElements getListaAccess() {
		return (pLista != null) ? pLista : (pLista = new ListaElements());
	}
	
	public ParserRule getListaRule() {
		return getListaAccess().getRule();
	}

	//ListaInt:
	//	{ListaInt} "List of Integer = {" valores+=INT ("," INT)* "}";
	public ListaIntElements getListaIntAccess() {
		return (pListaInt != null) ? pListaInt : (pListaInt = new ListaIntElements());
	}
	
	public ParserRule getListaIntRule() {
		return getListaIntAccess().getRule();
	}

	//ListaString:
	//	{ListaString} "List of String = {" valores+=STRING ("," STRING)* "}";
	public ListaStringElements getListaStringAccess() {
		return (pListaString != null) ? pListaString : (pListaString = new ListaStringElements());
	}
	
	public ParserRule getListaStringRule() {
		return getListaStringAccess().getRule();
	}

	//terminal DECIMAL:
	//	INT "." INT;
	public TerminalRule getDECIMALRule() {
		return (tDECIMAL != null) ? tDECIMAL : (tDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DECIMAL"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
