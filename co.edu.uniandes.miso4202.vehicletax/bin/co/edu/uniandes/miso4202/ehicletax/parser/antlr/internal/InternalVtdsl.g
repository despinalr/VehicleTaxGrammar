/*
* generated by Xtext
*/
grammar InternalVtdsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package co.edu.uniandes.miso4202.ehicletax.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package co.edu.uniandes.miso4202.ehicletax.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.edu.uniandes.miso4202.ehicletax.services.VtdslGrammarAccess;

}

@parser::members {

 	private VtdslGrammarAccess grammarAccess;
 	
    public InternalVtdslParser(TokenStream input, VtdslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected VtdslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getComponentesComponenteParserRuleCall_0()); 
	    }
		lv_componentes_0_0=ruleComponente		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"componentes",
        		lv_componentes_0_0, 
        		"Componente");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleComponente
entryRuleComponente returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponenteRule()); }
	 iv_ruleComponente=ruleComponente 
	 { $current=$iv_ruleComponente.current; } 
	 EOF 
;

// Rule Componente
ruleComponente returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComponenteAccess().getObjetoSimpleParserRuleCall_0()); 
    }
    this_ObjetoSimple_0=ruleObjetoSimple
    { 
        $current = $this_ObjetoSimple_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getComponenteAccess().getObjetoNombreParserRuleCall_1()); 
    }
    this_ObjetoNombre_1=ruleObjetoNombre
    { 
        $current = $this_ObjetoNombre_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleObjetoSimple
entryRuleObjetoSimple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjetoSimpleRule()); }
	 iv_ruleObjetoSimple=ruleObjetoSimple 
	 { $current=$iv_ruleObjetoSimple.current; } 
	 EOF 
;

// Rule ObjetoSimple
ruleObjetoSimple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getObjetoSimpleAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjetoSimpleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjetoSimpleAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjetoSimpleAccess().getComponentesComponenteParserRuleCall_2_0()); 
	    }
		lv_componentes_2_0=ruleComponente		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjetoSimpleRule());
	        }
       		add(
       			$current, 
       			"componentes",
        		lv_componentes_2_0, 
        		"Componente");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getObjetoSimpleAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleObjetoNombre
entryRuleObjetoNombre returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjetoNombreRule()); }
	 iv_ruleObjetoNombre=ruleObjetoNombre 
	 { $current=$iv_ruleObjetoNombre.current; } 
	 EOF 
;

// Rule ObjetoNombre
ruleObjetoNombre returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getObjetoNombreAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjetoNombreRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_descripcion_1_0=RULE_STRING
		{
			newLeafNode(lv_descripcion_1_0, grammarAccess.getObjetoNombreAccess().getDescripcionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjetoNombreRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"descripcion",
        		lv_descripcion_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjetoNombreAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjetoNombreAccess().getComponentesComponenteParserRuleCall_3_0()); 
	    }
		lv_componentes_3_0=ruleComponente		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjetoNombreRule());
	        }
       		add(
       			$current, 
       			"componentes",
        		lv_componentes_3_0, 
        		"Componente");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getObjetoNombreAccess().getRightCurlyBracketKeyword_4());
    }
)
;







// Entry rule entryRuleTipoSimple
entryRuleTipoSimple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoSimpleRule()); }
	 iv_ruleTipoSimple=ruleTipoSimple 
	 { $current=$iv_ruleTipoSimple.current; } 
	 EOF 
;

// Rule TipoSimple
ruleTipoSimple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTipoSimpleAccess().getTipoSimpleAction_0(),
            $current);
    }
)(this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getTipoSimpleAccess().getIDTerminalRuleCall_1_0()); 
    }

    |this_STRING_2=RULE_STRING
    { 
    newLeafNode(this_STRING_2, grammarAccess.getTipoSimpleAccess().getSTRINGTerminalRuleCall_1_1()); 
    }
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTipoSimpleAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleTipoValor
entryRuleTipoValor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoValorRule()); }
	 iv_ruleTipoValor=ruleTipoValor 
	 { $current=$iv_ruleTipoValor.current; } 
	 EOF 
;

// Rule TipoValor
ruleTipoValor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTipoValorAccess().getTipoValorAction_0(),
            $current);
    }
)this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getTipoValorAccess().getIDTerminalRuleCall_1()); 
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTipoValorAccess().getColonKeyword_2());
    }
this_ID_3=RULE_ID
    { 
    newLeafNode(this_ID_3, grammarAccess.getTipoValorAccess().getIDTerminalRuleCall_3()); 
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTipoValorAccess().getEqualsSignKeyword_4());
    }
this_DECIMAL_5=RULE_DECIMAL
    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getTipoValorAccess().getDECIMALTerminalRuleCall_5()); 
    }
	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTipoValorAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleLista
entryRuleLista returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListaRule()); }
	 iv_ruleLista=ruleLista 
	 { $current=$iv_ruleLista.current; } 
	 EOF 
;

// Rule Lista
ruleLista returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getListaAccess().getListaIntParserRuleCall_0()); 
    }
    this_ListaInt_0=ruleListaInt
    { 
        $current = $this_ListaInt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getListaAccess().getListaStringParserRuleCall_1()); 
    }
    this_ListaString_1=ruleListaString
    { 
        $current = $this_ListaString_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleListaInt
entryRuleListaInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListaIntRule()); }
	 iv_ruleListaInt=ruleListaInt 
	 { $current=$iv_ruleListaInt.current; } 
	 EOF 
;

// Rule ListaInt
ruleListaInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListaIntAccess().getListaIntAction_0(),
            $current);
    }
)	otherlv_1='List of Integer = {' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListaIntAccess().getListOfIntegerKeyword_1());
    }
(
(
		lv_valores_2_0=RULE_INT
		{
			newLeafNode(lv_valores_2_0, grammarAccess.getListaIntAccess().getValoresINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListaIntRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"valores",
        		lv_valores_2_0, 
        		"INT");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListaIntAccess().getCommaKeyword_3_0());
    }
this_INT_4=RULE_INT
    { 
    newLeafNode(this_INT_4, grammarAccess.getListaIntAccess().getINTTerminalRuleCall_3_1()); 
    }
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListaIntAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleListaString
entryRuleListaString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListaStringRule()); }
	 iv_ruleListaString=ruleListaString 
	 { $current=$iv_ruleListaString.current; } 
	 EOF 
;

// Rule ListaString
ruleListaString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListaStringAccess().getListaStringAction_0(),
            $current);
    }
)	otherlv_1='List of String = {' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListaStringAccess().getListOfStringKeyword_1());
    }
(
(
		lv_valores_2_0=RULE_STRING
		{
			newLeafNode(lv_valores_2_0, grammarAccess.getListaStringAccess().getValoresSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListaStringRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"valores",
        		lv_valores_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListaStringAccess().getCommaKeyword_3_0());
    }
this_STRING_4=RULE_STRING
    { 
    newLeafNode(this_STRING_4, grammarAccess.getListaStringAccess().getSTRINGTerminalRuleCall_3_1()); 
    }
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListaStringAccess().getRightCurlyBracketKeyword_4());
    }
)
;





RULE_DECIMAL : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


