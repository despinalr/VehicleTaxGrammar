/*
* generated by Xtext
*/
package co.edu.uniandes.miso4202.ehicletax.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import co.edu.uniandes.miso4202.ehicletax.services.VtdslGrammarAccess;

public class VtdslParser extends AbstractContentAssistParser {
	
	@Inject
	private VtdslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected co.edu.uniandes.miso4202.ehicletax.ui.contentassist.antlr.internal.InternalVtdslParser createParser() {
		co.edu.uniandes.miso4202.ehicletax.ui.contentassist.antlr.internal.InternalVtdslParser result = new co.edu.uniandes.miso4202.ehicletax.ui.contentassist.antlr.internal.InternalVtdslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getComponenteAccess().getAlternatives(), "rule__Componente__Alternatives");
					put(grammarAccess.getAtributoAccess().getAlternatives(), "rule__Atributo__Alternatives");
					put(grammarAccess.getAtributoAccess().getAlternatives_1_2(), "rule__Atributo__Alternatives_1_2");
					put(grammarAccess.getTipoSimpleAccess().getAlternatives_1(), "rule__TipoSimple__Alternatives_1");
					put(grammarAccess.getListaAccess().getAlternatives(), "rule__Lista__Alternatives");
					put(grammarAccess.getObjetoSimpleAccess().getGroup(), "rule__ObjetoSimple__Group__0");
					put(grammarAccess.getObjetoNombreAccess().getGroup(), "rule__ObjetoNombre__Group__0");
					put(grammarAccess.getAtributoAccess().getGroup_0(), "rule__Atributo__Group_0__0");
					put(grammarAccess.getAtributoAccess().getGroup_1(), "rule__Atributo__Group_1__0");
					put(grammarAccess.getTipoSimpleAccess().getGroup(), "rule__TipoSimple__Group__0");
					put(grammarAccess.getTipoValorAccess().getGroup(), "rule__TipoValor__Group__0");
					put(grammarAccess.getListaIntAccess().getGroup(), "rule__ListaInt__Group__0");
					put(grammarAccess.getListaIntAccess().getGroup_3(), "rule__ListaInt__Group_3__0");
					put(grammarAccess.getListaStringAccess().getGroup(), "rule__ListaString__Group__0");
					put(grammarAccess.getListaStringAccess().getGroup_3(), "rule__ListaString__Group_3__0");
					put(grammarAccess.getModelAccess().getComponentesAssignment(), "rule__Model__ComponentesAssignment");
					put(grammarAccess.getObjetoSimpleAccess().getNameAssignment_0(), "rule__ObjetoSimple__NameAssignment_0");
					put(grammarAccess.getObjetoSimpleAccess().getComponentesAssignment_2(), "rule__ObjetoSimple__ComponentesAssignment_2");
					put(grammarAccess.getObjetoNombreAccess().getNameAssignment_0(), "rule__ObjetoNombre__NameAssignment_0");
					put(grammarAccess.getObjetoNombreAccess().getDescripcionAssignment_1(), "rule__ObjetoNombre__DescripcionAssignment_1");
					put(grammarAccess.getObjetoNombreAccess().getComponentesAssignment_3(), "rule__ObjetoNombre__ComponentesAssignment_3");
					put(grammarAccess.getListaIntAccess().getValoresAssignment_2(), "rule__ListaInt__ValoresAssignment_2");
					put(grammarAccess.getListaStringAccess().getValoresAssignment_2(), "rule__ListaString__ValoresAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			co.edu.uniandes.miso4202.ehicletax.ui.contentassist.antlr.internal.InternalVtdslParser typedParser = (co.edu.uniandes.miso4202.ehicletax.ui.contentassist.antlr.internal.InternalVtdslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public VtdslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(VtdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
